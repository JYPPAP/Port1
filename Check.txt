// 0630
슬라이드 아이템에 대해서.
1. 전체 크기( 아이템이 들어있는 슬라이드의 너비를 구해서.)
    이 넘긴 양이 이 크기보다 커지면. 마지막에서 멈출 수 있도록 만들기?

2. 버튼을 눌러서 슬라이드 되는 방식이 아니라 버튼을 누르면 1개씩 넘어가는 방식으로 만들기.
- 혹시 추가를 한다면 swiper를 넣는 방법.
-- swiper를 넣는다면, 아이템의 끝에서 돌아올 카운트에 대해서 어떻게 만들어야 할 것인지
고민해봐야 한다. -> 이미 사용중인 swiper를 재사용 하는 방법.




// 0627
1. 메인페이지의 아이템 배치 방법에 대해서 물어보기.

# 아이템의 크기 변경
1-1 아이템의 배치 방법 float 이 아닌 다른 방법으로 바꾸기.
1-2 아이템의 크기를 반응형으로 바꿔서 무조건 한 화면에 원하는 양으로 나오게 만들기.

# 스크립트에서 바꾸기
1-3 리사이즈 이벤트를 정상적으로 활용해보기
> 현재 리턴값이 정상 적용이 안되는 것인지 뭐가 이상하게 된다.

1-4 이 방법이 아닌 다른 방법을 찾아보기.

2. 리사이즈 이벤트에서 
중복으로 사용하지 않는 방법 물어보기
현재 초기화면용, 리사이즈용 2개로 나눠서 아이템 배치를 했고,
리사이즈 안에 넣고, 초기 실행을 했을 때 얘가 한번만 실행되고 끝나서 해결방법 물어보기.

3. 


############################
말 할 때 "일단은" 쓰지 말기
1. 이미지가 왜곡되면 안되기 때문에 이미지 수정하기
2. 헤더의 색 바꾸기. 
로고와 배경 색상이 맞지 않기 때문에 바꾸기
3. 버튼 수정하기
4. 탑 뮤직에서
아이템의 간격 조정하기 좌우는 괜찮은데, 아래쪽에 간격을 최상단 컨텐츠 간격의 반절만큼 넣어야 할 것 같다.
5. 탑 뮤직에서 컨텐츠의 크기에 대해서 고민하기
 모바일 환경에서 좁아보이지 않을지, 아니면 어떻게 바꿔야 할 지 고민하기.
 > 크기를 grid로 바꾸거나 아니면
 간격을 특정 버튼을 눌렀을 때 원하는 형태로 배열할 수 있게 만들기.
6. 리사이즈 이벤트를 걸어준 값이 반환이 잘 되는지 알아보기.
> 리사이즈 이벤트가 발생할 때 마다 콘솔로 찍어서 잘 나오는지.
아니면 CSS에서 이상하게 적용된 것 일 수도 있으니, 모바일이나 화면이 줄어들었을 때 화면의 크기에 맞도록 수정하기
7. 인덱스 페이지와 뮤직라이브러리의 CSS를 통일해서 동일한 형태 유지하기.
8. 코드 다이어트 하기.



일정. 7월 11일까지는 포폴 1차가 다 끝나야 한다.
그 다음 2번째가 들어감.
주제를 다르게 해서
3번째꺼는 

8월 4일날은 완성된 포폴 1개를 발표
이 때 발표하는 것은 파워포인트로 만들어서
피티발표를 병행
기획의도
와이어프레임
스타일가이드 쭉 나오는 것을 발표한다.

4일이 지나고 5, 6일 

그 다음 2주는 구직활동

개인작엄
목표는 퍼블리싱을 하는데 사이트 2개정도
시간이 남으면 메인페이지만 만들기.
메인1, 서브는 2~4개
서브가 2개라면 컨텐츠의 양이 많은 경우
컨텐츠의 양이 적은 경우에는 4개
사이트 1개당 페이지수는 5개가 넘으면 안된다.
포폴로 만드는 것들은 그래도 서브가 2~4개정도인 것을 2개정도 만들고
디자인프로필 만드는 것도 고민.

다음주부터 취업상담 진행이 된다
6층 상담실 상담실장님과.
주로 아침, 저녁 이렇게 있다.
아침에 하고싶은 사람은 미리 얘기를 해 놔라.


쿠키를 사용하는 방법에 대해서 알아보기.

jquery
jquery-migrate

플러그인.js
플러그인.css

common.css 로
덮어쓰는 형태로 만들어야 한다.

custom.js
custom.css 등등
내가 만든 것이 아래에 올 수 있도록 작성해야 한다.

스크롤바 플러그인.
nice scroll 플러그인.


#########################
		slideItem
#########################
  console.log(frame);     // 1000
  console.log(vc);        // 5
  console.log(cont);      // 1
  
  화면을 줄이면.
  console.log(frame);     //  747
  console.log(vc);        //  4
  console.log(cont);      //  1.25
  
frame : 아이템이 출력되는 화면(mItem)의 너비
vc : frame / w(sItem의 너비) = 너비당 화면에 들어가는 아이템의 개수
cont : (sc[sItem.length;] / (vc * mc[mItem.length;]));

근데 왜 mc를 썼지?
mItem의 개수가 무슨 상관이 있다고...
mItem의 개수를 나눠준 이유는 지금 sItem의 개수가...
모든 sItem의 개수가 나오기 때문에 
sItem이 각 슬라이드마다 똑같은 양이 들어있기 때문에 mc를 곱해줬다.
그래서 값이 정상적으로 나왔다.
cont의 값의 의미는 mItem1개의 화면 너비에 나오는 sItem의 개수다.

값이 정상적으로 출력된다는 것을 알았으니.
return값이 정상적으로 출력되는지를 알아야 하는데.
리턴값도 정상적으로 출력이 된다.
그럼 뭐가 문제일까?

문제가 발생한 곳은 뮤직 라이브러리였다.
ㅋㅋㅋ 다른데 뒤지고 있었네 이런 쥐엔장

반환은 잘 되고있는거 같은 느낌인데
숫자가 모자란다. ㅋㅋㅋㅋ 왜지...
화면의 너비 잘 받아오고,
화면에 표시되는 아이템의 개수도 잘 받아오니
마지막인 cont가 문제라는건데.

사이즈가 확대 되었을 때 너비값을 확인해봐야 한다.


#
슬라이드를 넘기면서 원하는 아이템이 끝에 도달하도록 만들기 위해서 값을 만드는 데 필요한 요소들은
1. 출력되는 화면의 너비
2. 나오는 아이템의 크기
3. 아이템의 전체 개수


# dark mode
css에서 body를 visibility: hidden으로 한 다음.
js에서 스타일 지정.

버튼 안에 transition이 지정되어 있다면
깜빡거림이 나타나게 된다.

#무한 슬라이드?
카운트 변수 cnt가 있고, 전체 아이템의 개수에서 화면에 출력되는 아이템의 개수 viewItem
아이템들을 배열에 넣은 다음 출력되는 부분을 카운트에 곱한 for 같은 반복문을 사용해서 4개씩 출력한다고 하면
cnt, cnt+1 ... 의 형태로 출력될 수 있게 만들기.
그리고 cnt값은 next 버튼을 누르면 cnt++의 형태로 반환되고,
prev 버튼을 누르면 cnt--의 형태로 반환.
앞으로 가는건 cnt++ 그대로 쓰면 되고,
뒤로 가는건 cnt--를 쓰는데 0일 때는 가장 끝으로 가야하니까 
cnt = ( cnt + ( item.length - 

마지막을 구하는 것은
6개의 아이템이 있을 때 0번에서 prev를 눌렀을 때 인덱스번호 5번으로 가야 한다는 의미이다.
그렇다면
cnt = cnt(처음일 때는 0 이겠고) + ( item.length(6?) - 1 ) % item.length를 한다면 가장 끝쪽으로 가게 된다.
이걸 통해서 cnt의 값이 5가 출력된다면, for 구문을 이용해서 
4개의 아이템이 화면에 출력된다고 할 때

아이템의 인덱스 번호를 cnt, cnt+1, .... 의 형태로 만들면 될 것 같다.
이때 아이템의 형태는 리스트의 형태로 짜여져 있어야 할 것 같다.



